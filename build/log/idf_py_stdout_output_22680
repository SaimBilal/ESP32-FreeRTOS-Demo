[1/10] Performing build step for 'bootloader'
[1/3] Linking C executable bootloader.elf
[2/3] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/Espressif/esp/nodma_temp_wifi/build/bootloader/bootloader.bin
[3/3] C:\Windows\system32\cmd.exe /C "cd /D C:\Espressif\esp\nodma_temp_wifi\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Espressif/esp/nodma_temp_wifi/build/bootloader/bootloader.bin"
Bootloader binary size 0x5490 bytes. 0x2b70 bytes (34%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/nodma_temp_wifi.c.obj
[5/10] Linking C static library esp-idf\main\libmain.a
[6/10] Generating ld/sections.ld
[7/10] Building C object CMakeFiles/nodma_temp_wifi.elf.dir/project_elf_src_esp32s3.c.obj
[8/10] Linking CXX executable nodma_temp_wifi.elf
[9/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/Espressif/esp/nodma_temp_wifi/build/nodma_temp_wifi.bin
[10/10] C:\Windows\system32\cmd.exe /C "cd /D C:\Espressif\esp\nodma_temp_wifi\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Espressif/esp/nodma_temp_wifi/build/partition_table/partition-table.bin C:/Espressif/esp/nodma_temp_wifi/build/nodma_temp_wifi.bin"
nodma_temp_wifi.bin binary size 0xb8760 bytes. Smallest app partition is 0x100000 bytes. 0x478a0 bytes (28%) free.
